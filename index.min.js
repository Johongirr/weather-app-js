const weatherAPIKey="0a44599bef483c57540eed16fcddc18d",form=document.querySelector("form"),weatherContainer=document.querySelector(".weather-hourly__container"),hourlyWeatherContainer=document.querySelector(".weather-hourly"),weather8DaysForecastContainer=document.querySelector(".weather .weather-8days-forecast"),currentWeatherContainer=document.querySelector(".weather-current"),currentWeatherNodes={celciusToFahrenheitChangerBtn:document.querySelector(".weather-current__fahrenheit-btn"),fahrenheitToCelciusChangerBtn:document.querySelector(".weather-current__celcius-btn"),currentWeatherCity:document.querySelector(".weather__current-city"),updatedAtBox:document.querySelector(".weather-current__updated-time"),currentWeatherIcon:document.querySelector(".weather-current__weather-icon"),currentWeatherTemperature:document.querySelector(".weather-current__temperature"),currentWeatherCondition:document.querySelector(".weather-current__weather-condition"),currenWeatherFeelsLikeTemperature:document.querySelector(".weather__feels-like-temperature"),currenWeatherWindSpeed:document.querySelector(".weather__wind-speed"),currentVibility:document.querySelector(".weather__visibility"),currentWeatherHumidity:document.querySelector(".weather__humidity"),currentWeatherPressure:document.querySelector(".weather__pressure"),currentWeatherDewPoint:document.querySelector(".weather__dew-point")};let current,currentCity="",hours=[],days=[];const capitalizeFirstLetter=e=>e.slice(0,1).toUpperCase()+e.slice(1),padZero=e=>e.toString().padStart(2,"0"),convertToFahrenheit=e=>(1.8*e-459.67).toFixed(0),convertFahrenheitToCelcius=e=>Math.floor((e-32)/1.8),convertCelciusToFahrenheit=e=>Math.floor(1.8*e+32),convertKelvinToCelcius=e=>Math.round(e-273.15),calculateDewPoint=e=>Math.round((current.humidity/100)**(1/8)*(112+.9*e)+.1*e-112),convertTimeStampToValidTime=e=>new Date(1e3*e).getHours()>12?`${new Date(1e3*e).getHours()-12} PM`:`${new Date(1e3*e).getHours()} AM`,updateCurrentCity=e=>{currentWeatherNodes.currentWeatherCity.textContent=capitalizeFirstLetter(currentCity)},updateLastUpdatedAtText=e=>{const t=new Date(1e3*e.dt),r=t.getHours()>12?t.getHours()-12:t.getHours(),n=12===t.getHours()&&t.getMinutes()>0||t.getHours()>12?"PM":"AM";currentWeatherNodes.updatedAtBox.textContent=`${padZero(r)}:${padZero(t.getMinutes())} ${n}`},updateCurrentWeatherIcon=e=>{currentWeatherNodes.currentWeatherIcon.src=`http://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`,currentWeatherNodes.currentWeatherIcon.alt=e.weather[0].description},updateCurrentWeatherTemperature=e=>{currentWeatherNodes.currentWeatherTemperature.textContent=convertToFahrenheit(e.temp)},updateWeatherCondition=e=>{currentWeatherNodes.currentWeatherCondition.textContent=capitalizeFirstLetter(e.weather[0].description)},updateFeelsLikeTemperature=e=>{currentWeatherNodes.currenWeatherFeelsLikeTemperature.textContent=convertToFahrenheit(e.temp)},updateWindSpeed=e=>{document.querySelector(".weather__wind-direction").style=`transform: rotate(${e.wind_deg}deg)`,currentWeatherNodes.currenWeatherWindSpeed.textContent=`${Math.round(2.236937*e.wind_speed)} mph`},updateHumidity=e=>{currentWeatherNodes.currentWeatherHumidity.textContent=`${e.humidity}%`},updateCurrentWeatherPressure=e=>{currentWeatherNodes.currentWeatherPressure.textContent=`${Math.round(e.pressure/27.84496017704118)} in`},convertDewPointInFahrenheit=e=>{currentWeatherNodes.currentWeatherDewPoint.innerHTML=`${calculateDewPoint(convertToFahrenheit(e.temp))}<sup>o</sup>`},convertDewPointInCelcius=e=>{currentWeatherNodes.currentWeatherDewPoint.innerHTML=`${calculateDewPoint(convertKelvinToCelcius(e.temp))}<sup>o</sup>`},updateMinutelyWeatherForecast=()=>{if(!minutes.length)return;weatherContainer.innerHTML="";minutes.forEach(e=>{console.log(minutes,minutes.length)})},updateHourlyWeatherForecast=()=>{if(!hours.length)return;weatherContainer.innerHTML="";const e=hours.map(e=>`\n        <article class="card-hourly weather-hourly__card-hourly">\n        <div class="card-hourly__top">\n            <header class="card-hourly">\n                <h5 class="card-hourly__title">\n                    ${convertTimeStampToValidTime(e.dt)}\n                </h5>\n            </header>\n            <figure class="card-hourly__icon-box">\n                <img src="http://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png" alt="" class="card-hourly__icon">\n                <figcaption class="card-hourly__weather-description">\n                    ${e.weather[0].description}\n                </figcaption>\n            </figure>\n        </div>\n        <div class="card-hourly__bottom">\n            <span class="card-hourly__temperature weather__temperature">\n                ${convertToFahrenheit(e.temp)}\n                 \n            </span>\n            \x3c!-- <figure class="card__precipitation-box">\n                <svg width="10" height="10" viewBox="0 0 6 8" fill="white" xmlns="http://www.w3.org/2000/svg">\n                    <path d="M5.27344 4.55469C5.42448 4.85156 5.5 5.16667 5.5 5.5C5.5 5.72917 5.47005 5.95052 5.41016 6.16406C5.35026 6.3776 5.26562 6.57682 5.15625 6.76172C5.04948 6.94661 4.91927 7.11589 4.76562 7.26953C4.61458 7.42057 4.44661 7.55078 4.26172 7.66016C4.07682 7.76693 3.8776 7.85026 3.66406 7.91016C3.45052 7.97005 3.22917 8 3 8C2.77083 8 2.54948 7.97005 2.33594 7.91016C2.1224 7.85026 1.92318 7.76693 1.73828 7.66016C1.55339 7.55078 1.38411 7.42057 1.23047 7.26953C1.07943 7.11589 0.949219 6.94661 0.839844 6.76172C0.733073 6.57682 0.64974 6.3776 0.589844 6.16406C0.529948 5.95052 0.5 5.72917 0.5 5.5C0.5 5.16927 0.572917 4.85547 0.71875 4.55859L2.98047 0L5.27344 4.55469Z" fill="white"/>\n                </svg>   \n                <span class="card__precipitation">\n                    25%\n                </span>                             \n            </figure> --\x3e\n        </div>\n    </article>\n        `).join("");weatherContainer.innerHTML=e},updateWeeklyWeatherForecast=()=>{if(!days.length)return;const e=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],t=document.querySelector(".weather-8days-forecast__container");t.innerHTML="";const r=days.map(t=>`\n        <article class="card weather-8days-forecast__card">\n        <header class="card__header">\n            <h4 class="card__title">\n                ${new Date(1e3*t.dt).getDate()===(new Date).getDate()?"Today":`${e[new Date(1e3*t.dt).getDay()]+" "+new Date(1e3*t.dt).getDate()}`}\n            </h4>\n        </header>\n        \n        <figure class="card__weather-icon-box">\n            <img src="http://openweathermap.org/img/wn/${t.weather[0].icon}@2x.png" alt="icon" class="card__weather-icon">\n            \x3c!-- <figure class="card__precipitation-box">\n                <svg width="10" height="10" viewBox="0 0 6 8" fill="white" xmlns="http://www.w3.org/2000/svg">\n                    <path d="M5.27344 4.55469C5.42448 4.85156 5.5 5.16667 5.5 5.5C5.5 5.72917 5.47005 5.95052 5.41016 6.16406C5.35026 6.3776 5.26562 6.57682 5.15625 6.76172C5.04948 6.94661 4.91927 7.11589 4.76562 7.26953C4.61458 7.42057 4.44661 7.55078 4.26172 7.66016C4.07682 7.76693 3.8776 7.85026 3.66406 7.91016C3.45052 7.97005 3.22917 8 3 8C2.77083 8 2.54948 7.97005 2.33594 7.91016C2.1224 7.85026 1.92318 7.76693 1.73828 7.66016C1.55339 7.55078 1.38411 7.42057 1.23047 7.26953C1.07943 7.11589 0.949219 6.94661 0.839844 6.76172C0.733073 6.57682 0.64974 6.3776 0.589844 6.16406C0.529948 5.95052 0.5 5.72917 0.5 5.5C0.5 5.16927 0.572917 4.85547 0.71875 4.55859L2.98047 0L5.27344 4.55469Z" fill="white"/>\n                </svg>   \n                <span class="card__precipitation">\n                    25%\n                </span>                             \n            </figure> --\x3e\n        </figure>\n        <div class="card__temperature-box">\n            <span class="card__temperature weather__temperature">\n                ${convertToFahrenheit(t.temp.max)}\n               \n            </span>\n            <span class="card__temperature weather__temperature">\n                ${convertToFahrenheit(t.temp.min)}\n               \n            </span>\n        </div>\n    </article>\n        `).join("");t.innerHTML=r},updateCurrenWeatherDOM=e=>{e&&(updateCurrentCity(),updateLastUpdatedAtText(e),updateCurrentWeatherIcon(e),updateCurrentWeatherTemperature(e),updateWeatherCondition(e),updateFeelsLikeTemperature(e),updateWindSpeed(e),updateHumidity(e),updateCurrentWeatherPressure(e),convertDewPointInFahrenheit(e),updateWeeklyWeatherForecast(),updateHourlyWeatherForecast())},copyAPIData=e=>{current=e.current,hours=[...e.hourly.slice(0,24)],days=[...e.daily],updateCurrenWeatherDOM(current)},constvertWindSpeedToKmph=()=>{currentWeatherNodes.currenWeatherWindSpeed.textContent=`${Math.round(3.6*current.wind_speed)} km/h`},convertPressureToMb=()=>{currentWeatherNodes.currentWeatherPressure.textContent=`${current.pressure} mb`},convertTemperature=e=>{const t=document.querySelectorAll(".weather__temperature");"celcius"===e.target.dataset.temp?(e.target.classList.add("active"),e.target.disabled=!0,e.target.previousElementSibling.classList.remove("active"),e.target.previousElementSibling.disabled=!1,currentWeatherNodes.currenWeatherWindSpeed.textContent=`${Math.round(3.6*current.wind_speed)} km/h`,currentWeatherNodes.currentWeatherPressure.textContent=`${current.pressure} mb`,convertDewPointInCelcius(current),t.forEach(e=>{e.textContent=convertFahrenheitToCelcius(e.textContent.trim())})):(e.target.classList.add("active"),e.target.disabled=!0,e.target.nextElementSibling.classList.remove("active"),e.target.nextElementSibling.disabled=!1,updateCurrentWeatherPressure(current),updateWindSpeed(current),convertDewPointInFahrenheit(current),t.forEach(e=>{e.textContent=convertCelciusToFahrenheit(e.textContent.trim())}))},hideNode=e=>{e.style.display="none"},displayNode=e=>{e.style.display="block"},getCityWeather=e=>{form.querySelector("input").value;const t=new XMLHttpRequest;t.open("GET",`https://api.openweathermap.org/data/2.5/onecall?lat=${e.coord.lat}&lon=${e.coord.lon}&appid=${weatherAPIKey}`),t.onload=function(){if(200===this.status){const e=JSON.parse(this.response);copyAPIData(e),hideNode(progressNode.progress),displayNode(hourlyWeatherContainer),displayNode(weather8DaysForecastContainer),displayNode(currentWeatherContainer),document.querySelectorAll(".weather-current__temperature-changer-btn").forEach(e=>{e.addEventListener("click",convertTemperature)})}},t.send()},errorMessageNodes={errorMessageContainer:document.querySelector(".error-message-box"),errorMessage:document.querySelector(".error-message-box h2")},progressNode={progress:document.querySelector(".progress")},getCityCoorDinates=e=>{e.preventDefault(),console.log(e.target);const t=form.querySelector("input").value,r=new XMLHttpRequest;r.open("GET",`https://api.openweathermap.org/data/2.5/weather?q=${t}&appid=${weatherAPIKey}`),r.onload=function(){if(200===this.status){const e=JSON.parse(this.response);hideNode(errorMessageNodes.errorMessageContainer),getCityWeather(e),currentCity=t}else hideNode(progressNode.progress),displayNode(errorMessageNodes.errorMessageContainer),errorMessageNodes.errorMessage.textContent=`${this.status} ${this.statusText}`},r.onprogress=function(){hideNode(hourlyWeatherContainer),hideNode(weather8DaysForecastContainer),hideNode(currentWeatherContainer),displayNode(progressNode.progress)},r.onerror=function(){errorMessageNodes.errorMessage.textContent=`${this.status} ${this.statusText}`,displayNode(errorMessageNodes.errorMessageContainer)},e.target.reset(),r.send()};form.addEventListener("submit",getCityCoorDinates);